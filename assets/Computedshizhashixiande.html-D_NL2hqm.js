import{_ as n,c as a,a as e,o as t}from"./app-Crz_P5Al.js";const p={};function o(l,s){return t(),a("div",null,s[0]||(s[0]=[e(`<p>在 <code>Vue 3</code> 中，<code>Computed</code> 是一个非常常用的特性，它能够帮助我们轻松地处理数据的计算和关联。那么，<code>Computed</code> 是如何实现的呢？</p><h3 id="computed-的特性" tabindex="-1"><a class="header-anchor" href="#computed-的特性"><span>Computed 的特性</span></a></h3><ol><li>依赖追踪：Vue 会自动追踪 Computed 依赖的数据，并建立相应的依赖关系。只有依赖数据发生变化时，Computed 才会重新计算。</li></ol><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">    <span class="token keyword">import</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> computed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">const</span> sum <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> state<span class="token punctuation">.</span>a <span class="token operator">+</span> state<span class="token punctuation">.</span>b</span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>缓存：如果依赖数据不再改变，Computed 会缓存上一次计算的结果，下次读取时直接返回缓存值，而不是重新计算。</li><li>懒计算：只有当 Computed 被使用（读取）时，才会进行计算。否则，只是定义了一个变量而已。</li></ol>`,5)]))}const i=n(p,[["render",o],["__file","Computedshizhashixiande.html.vue"]]),u=JSON.parse('{"path":"/blogs/Vue/2023/Computedshizhashixiande.html","title":"Computed是咋实现的？","lang":"en-US","frontmatter":{"title":"Computed是咋实现的？","date":"2023/6/13","tags":["Computed"],"categories":["Vue"]},"headers":[{"level":3,"title":"Computed 的特性","slug":"computed-的特性","link":"#computed-的特性","children":[]}],"git":{"createdTime":1757911599000,"updatedTime":1757911599000,"contributors":[{"name":"D_quieT","email":"1360577536@qq.com","commits":1}]},"filePathRelative":"blogs/Vue/2023/Computed是咋实现的.md"}');export{i as comp,u as data};
