import{_ as e,c,a,o as i}from"./app-Crz_P5Al.js";const l={};function h(f,t){return i(),c("div",null,t[0]||(t[0]=[a('<h3 id="它们的区别在于" tabindex="-1"><a class="header-anchor" href="#它们的区别在于"><span>它们的区别在于 :</span></a></h3><ul><li>watch ：既要指明监视的数据源，也要指明监视的回调。</li><li>而 watchEffect 可以自动监听数据源作为依赖。不用指明监视哪个数据，监视的回调中用到哪个数据，那就监视哪个数据。</li><li>watch 可以访问改变之前和之后的值，watchEffect 只能获取改变后的值。</li><li>watch 运行的时候不会立即执行，值改变后才会执行，而 watchEffect 运行后可立即执行。这一点可以通过 watch 的配置项 immediate 改变。</li><li>watchEffect有点像 computed: <ul><li>但 computed 注重的计算出来的值（回调函数的返回值）， 所以必须要写返回值。</li><li>而 watcheffect注重的是过程（回调函数的函数体），所以不用写返回值。</li></ul></li></ul>',2)]))}const r=e(l,[["render",h],["__file","WatchheWatchEffectdequbie.html.vue"]]),s=JSON.parse('{"path":"/blogs/Vue/2023/WatchheWatchEffectdequbie.html","title":"Watch和WatchEffect的区别","lang":"en-US","frontmatter":{"title":"Watch和WatchEffect的区别","date":"2023/4/26","tags":["WatchEffec"],"categories":["Vue"]},"headers":[{"level":3,"title":"它们的区别在于 :","slug":"它们的区别在于","link":"#它们的区别在于","children":[]}],"git":{"createdTime":1757911599000,"updatedTime":1757911599000,"contributors":[{"name":"D_quieT","email":"1360577536@qq.com","commits":1}]},"filePathRelative":"blogs/Vue/2023/Watch和WatchEffect的区别.md"}');export{r as comp,s as data};
